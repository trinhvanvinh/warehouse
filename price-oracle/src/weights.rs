// This file is part of pallet-price-oracle.

// Copyright (C) 2020-2022  Intergalactic, Limited (GIB).
// SPDX-License-Identifier: Apache-2.0

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Autogenerated weights for pallet_price_oracle
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-08-25, STEPS: [10, ], REPEAT: 4, LOW RANGE: [], HIGH RANGE: []
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/basilisk
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet-price-oracle
// --steps=10
// --repeat=4
// --extrinsic
// *
// --heap-pages=4096
// --template=./.maintain/pallet-weight-template.hbs
// --output=./pallets/price-oracle/src/weights.rs

#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(clippy::unnecessary_cast)]

use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_price_oracle.
pub trait WeightInfo {
    fn on_finalize_no_entry() -> Weight;
    fn on_finalize_one_token() -> Weight;
    fn on_finalize_multiple_tokens_all_bucket_levels(a: u32) -> Weight;
    fn on_finalize_multiple_tokens(b: u32) -> Weight;
}

/// Weights for pallet_price_oracle using the hack.hydraDX node and recommended hardware.
pub struct HydraWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for HydraWeight<T> {
    fn on_finalize_no_entry() -> Weight {
        Weight::zero()
    }
    fn on_finalize_one_token() -> Weight {
        Weight::zero()
    }
    fn on_finalize_multiple_tokens_all_bucket_levels(_a: u32) -> Weight {
        Weight::zero()
    }
    fn on_finalize_multiple_tokens(_b: u32) -> Weight {
        Weight::zero()
    }
}

// For backwards compatibility and tests
impl WeightInfo for () {
    fn on_finalize_no_entry() -> Weight {
        Weight::zero()
    }
    fn on_finalize_one_token() -> Weight {
        Weight::zero()
    }
    fn on_finalize_multiple_tokens_all_bucket_levels(_a: u32) -> Weight {
        Weight::zero()
    }
    fn on_finalize_multiple_tokens(_b: u32) -> Weight {
        Weight::zero()
    }
}
